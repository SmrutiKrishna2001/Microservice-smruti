$schema: https://json.schemastore.org/github-workflows


name: Build and Push All Microservices to ECR

on:
  push:
    paths:
      - 'src/**/Dockerfile'  # Trigger when any Dockerfile changes
      - '.github/workflows/ci.yaml'  # Trigger if the workflow file changes

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Images for All Microservices
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # Retrieve AWS Account ID
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        
        # Set the ECR repository name (single repository for all microservices)
        REPO_NAME="smrutisw2001"
        
        # Loop through each microservice folder with a Dockerfile
        for DOCKERFILE in $(find src -name Dockerfile); do
          # Extract the microservice name (name of the folder containing the Dockerfile)
          SERVICE=$(basename $(dirname $DOCKERFILE))
          
          # Define the image tag
          IMAGE_TAG="$SERVICE:latest"  # You can use any custom tag here (e.g., v1.0.0, build123)
          
          # Define ECR URI
          ECR_URI="$ACCOUNT_ID.dkr.ecr.${AWS_REGION}.amazonaws.com/$REPO_NAME"
          
          echo "Building and pushing image for service: $SERVICE"
          
          # Build the Docker image
          docker build -t $SERVICE:latest $(dirname $DOCKERFILE)
          
          # Tag the Docker image for ECR
          docker tag $SERVICE:latest $ECR_URI:$IMAGE_TAG
          
          # Push the Docker image to ECR
          docker push $ECR_URI:$IMAGE_TAG
        done
